// Code generated by goctl. DO NOT EDIT.
// Source: auth_v1.proto

package authservice

import (
	"context"

	"github.com/serzap/auth_service/api"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GetUserInfoRequest  = api.GetUserInfoRequest
	GetUserInfoResponse = api.GetUserInfoResponse
	LoginRequest        = api.LoginRequest
	LoginResponse       = api.LoginResponse
	RegisterRequest     = api.RegisterRequest
	RegisterResponse    = api.RegisterResponse
	VerifyEmailRequest  = api.VerifyEmailRequest
	VerifyEmailResponse = api.VerifyEmailResponse

	AuthService interface {
		Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterResponse, error)
		Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error)
		VerifyEmail(ctx context.Context, in *VerifyEmailRequest, opts ...grpc.CallOption) (*VerifyEmailResponse, error)
		GetUserInfo(ctx context.Context, in *GetUserInfoRequest, opts ...grpc.CallOption) (*GetUserInfoResponse, error)
	}

	defaultAuthService struct {
		cli zrpc.Client
	}
)

func NewAuthService(cli zrpc.Client) AuthService {
	return &defaultAuthService{
		cli: cli,
	}
}

func (m *defaultAuthService) Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterResponse, error) {
	client := api.NewAuthServiceClient(m.cli.Conn())
	return client.Register(ctx, in, opts...)
}

func (m *defaultAuthService) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	client := api.NewAuthServiceClient(m.cli.Conn())
	return client.Login(ctx, in, opts...)
}

func (m *defaultAuthService) VerifyEmail(ctx context.Context, in *VerifyEmailRequest, opts ...grpc.CallOption) (*VerifyEmailResponse, error) {
	client := api.NewAuthServiceClient(m.cli.Conn())
	return client.VerifyEmail(ctx, in, opts...)
}

func (m *defaultAuthService) GetUserInfo(ctx context.Context, in *GetUserInfoRequest, opts ...grpc.CallOption) (*GetUserInfoResponse, error) {
	client := api.NewAuthServiceClient(m.cli.Conn())
	return client.GetUserInfo(ctx, in, opts...)
}
