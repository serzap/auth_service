// Code generated by goctl. DO NOT EDIT.
// Source: auth_v1.proto

package server

import (
	"context"

	"github.com/serzap/auth_service/api"
	"github.com/serzap/auth_service/internal/logic"
	"github.com/serzap/auth_service/internal/svc"
)

type AuthServiceServer struct {
	svcCtx *svc.ServiceContext
	api.UnimplementedAuthServiceServer
}

func NewAuthServiceServer(svcCtx *svc.ServiceContext) *AuthServiceServer {
	return &AuthServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *AuthServiceServer) Register(ctx context.Context, in *api.RegisterRequest) (*api.RegisterResponse, error) {
	l := logic.NewRegisterLogic(ctx, s.svcCtx)
	return l.Register(in)
}

func (s *AuthServiceServer) Login(ctx context.Context, in *api.LoginRequest) (*api.LoginResponse, error) {
	l := logic.NewLoginLogic(ctx, s.svcCtx)
	return l.Login(in)
}

func (s *AuthServiceServer) VerifyEmail(ctx context.Context, in *api.VerifyEmailRequest) (*api.VerifyEmailResponse, error) {
	l := logic.NewVerifyEmailLogic(ctx, s.svcCtx)
	return l.VerifyEmail(in)
}

func (s *AuthServiceServer) GetUserInfo(ctx context.Context, in *api.GetUserInfoRequest) (*api.GetUserInfoResponse, error) {
	l := logic.NewGetUserInfoLogic(ctx, s.svcCtx)
	return l.GetUserInfo(in)
}
